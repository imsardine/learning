apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.usage"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project (':androidlib')
    compile "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:recyclerview-v7:25.3.0'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'connectedDebugAndroidTest', ':javalib:jacocoTestReport', ':androidlib:jacocoTestReport']) {
    def javalibTask = tasks.getByPath(':javalib:jacocoTestReport')
    def androidlibTask = tasks.getByPath(':androidlib:jacocoTestReport')

    executionData = files(
            fileTree(dir: buildDir, includes: ['jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*.ec']),
            javalibTask.executionData,
            androidlibTask.executionData
    )

    sourceDirectories = files(
            fileTree(dir: projectDir, include: 'src/main/java'),
            javalibTask.sourceDirectories,
            androidlibTask.sourceDirectories
    )

    classDirectories = files(
            fileTree(dir: "${buildDir}/intermediates/classes/debug", includes: COVERAGE_INCLUDES, excludes: COVERAGE_EXCLUDES),
            javalibTask.classDirectories,
            androidlibTask.classDirectories
    )
}
